apiVersion: v1
kind: Service
metadata:
  name: viewer-neo4j
  labels:
    app: viewer-neo4j
    component: core
  annotations:
    helm.sh/resource-policy: keep
spec:
  clusterIP: None  # This makes it a headless service
  ports:
    - port: 7474
      targetPort: 7474
      name: browser
    - port: 7687
      targetPort: 7687
      name: bolt
    - port: 6362
      targetPort: 6362
      name: backup
  selector:
    app: viewer-neo4j
    component: core
---
# Source: neo4j/templates/neo4j-svc.yaml
# ClusterIP service for bolt / http connections
apiVersion: v1
kind: Service
metadata:
  name: "viewer-neo4j-n2"
  namespace: {{.Release.Namespace}}
  labels:
    app: "viewer-neo4j"   
spec:
  publishNotReadyAddresses: false
  type: ClusterIP
  selector:
    app: "viewer-neo4j"
    helm.neo4j.com/instance: "viewer-neo4j-n2"
  ports:
    - protocol: TCP
      port: 7687
      targetPort: 7687
      name: tcp-bolt
    - protocol: TCP
      port: 7474
      targetPort: 7474
      name: tcp-http
---
# Source: neo4j/templates/neo4j-svc.yaml
# ClusterIP service for admin connections to Neo4j inside Kubernetes.
apiVersion: v1
kind: Service
metadata:
  name: "viewer-neo4j-n2-admin"
  namespace: {{.Release.Namespace}}
  labels:
    app: "viewer-neo4j"    
spec:
  publishNotReadyAddresses: true
  type: "ClusterIP"
  selector:
    app: "viewer-neo4j"
  ports:
    - protocol: TCP
      port: 6362
      targetPort: 6362
      name: tcp-backup
    - protocol: TCP
      port: 7687
      targetPort: 7687
      name: tcp-bolt
    - protocol: TCP
      port: 7474
      targetPort: 7474
      name: tcp-http
---
# Source: neo4j/templates/neo4j-svc.yaml
# Headless service for internal connections to an instance e.g. for neo4j clustering or monitoring.
apiVersion: v1
kind: Service
metadata:
  name: "viewer-neo4j-n2-internals"
  namespace: {{.Release.Namespace}}
  labels:
    app: "viewer-neo4j"
spec:
  publishNotReadyAddresses: true
  type: "ClusterIP"
  selector:
    app: "viewer-neo4j"
  ports:
    - protocol: TCP
      port: 6362
      targetPort: 6362
      name: tcp-backup
    - protocol: TCP
      port: 7687
      targetPort: 7687
      name: tcp-bolt
    - protocol: TCP
      port: 7474
      targetPort: 7474
      name: tcp-http
    #enable the ports for non Read Replicas
    - protocol: TCP
      port: 7688
      targetPort: 7688
      name: tcp-boltrouting
    - protocol: TCP
      port: 5000
      targetPort: 5000
      name: tcp-discovery
    - protocol: TCP
      port: 7000
      targetPort: 7000
      name: tcp-raft
    - protocol: TCP
      port: 6000
      targetPort: 6000
      name: tcp-tx

---
apiVersion: "apps/v1"
kind: StatefulSet
metadata:
  name: viewer-neo4j-n2-core
  namespace: {{.Release.Namespace}}
spec:
  serviceName: viewer-neo4j
  replicas: {{.Values.ViewerNeo4jReplicaCount}}
  selector:
    matchLabels:
      app: viewer-neo4j
  template:
    metadata:
      labels:
        app: viewer-neo4j
        component: core
    spec:
      securityContext:
        runAsUser: 7474
        runAsGroup: 7474
        fsGroup: 7474
        fsGroupChangePolicy: "Always"      
      containers:
        - name: viewer-neo4j
          image: "{{.Values.ViewerNeo4jImage.name}}:{{.Values.ViewerNeo4jImage.tag}}"
          imagePullPolicy: "{{.Values.ViewerNeo4jImage.pullPolicy}}"
          command: ['sh', '-c', "/var/lib/neo4j/config/init.sh"]
          env:
            - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
              value: "yes"                                                    
            - name: SERVICE_NEO4J_ADMIN
              value: "viewer-neo4j-n2-admin.{{.Release.Namespace}}.svc.cluster.local"
            - name: SERVICE_NEO4J_INTERNALS
              value: "viewer-neo4j-n2-internals.{{.Release.Namespace}}.svc.cluster.local"
            - name: SERVICE_NEO4J
              value: "viewer-neo4j-n2.{{.Release.Namespace}}.svc.cluster.local"

            - name: NEO4J_dbms_memory_heap_maxSize
              value: "8G"
            - name: TIME_ZONE
              value: "Europe/Paris"

          ports:
            - containerPort: 7474
              name: browser
            - containerPort: 7687
              name: bolt
            - containerPort: 6362
              name: backup
          resources:
            {{- toYaml .Values.ViewerNeo4jResources | nindent 12 }}
          volumeMounts:
            - name: logdir
              mountPath: /logs
            - name: neo4jdata
              mountPath: /var/lib/neo4j/config/neo4j5_data
            - name: neo4jconfigfolder
              mountPath: /var/lib/neo4j/config/configuration              
            - name: neo4jconf
              mountPath: /var/lib/neo4j/config/configuration/neo4j.conf
              subPath: neo4j.conf
            - name: apocconf
              mountPath: /var/lib/neo4j/config/configuration/apoc.conf
              subPath: apoc.conf
{{- if .Values.UseImagePullSecrets }}              
      imagePullSecrets:
        - name: imagepull-sec
{{- end }}        
      volumes:
        - name: neo4jconf
          configMap:
            name: neo4jconf-n2
        - name: apocconf
          configMap:
            name: neo4japocconf
  volumeClaimTemplates:
    - metadata:
        name: logdir
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "{{ .Values.DiskClassName }}"
        resources:
          requests:
            storage: "1Gi"
    - metadata:
        name: neo4jdata
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "{{ .Values.DiskClassName }}"
        resources:
          requests:
            storage: "10Gi"
    - metadata:
        name: neo4jconfigfolder
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "{{ .Values.DiskClassName }}"
        resources:
          requests:
            storage: "10Gi"