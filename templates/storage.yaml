{{- if .Values.CreateStorageClass }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ .Values.DiskClassName }}
  annotations:
    helm.sh/resource-policy: keep
  {{- if eq .Values.K8SProvider "EKS" }}    
provisioner: {{ .Values.EKS_DSdriver }}
parameters:
  type: gp3
  fsType: ext4
  {{- else if eq .Values.K8SProvider "AKS" }}  
provisioner: {{ .Values.AKS_DSdriver }}
parameters:
  skuName: Premium_LRS
  kind: Managed
  {{- end }}  
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
---
  {{- if .Values.AnalysisNodeFS.enable }}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ .Values.FileClassName }}
  annotations:
    helm.sh/resource-policy: keep
    {{- if eq .Values.K8SProvider "EKS" }}
provisioner: {{ .Values.EKS_FSdriver }}
parameters:
  provisioningMode: efs-ap 
  directoryPerms: "0777"
    {{- else if eq .Values.K8SProvider "AKS" }}
provisioner: {{ .Values.AKS_FSdriver }}
allowVolumeExpansion: true
mountOptions:
 - dir_mode=0777
 - file_mode=0777
 - uid=10001
 - gid=10001
 - mfsymlinks
 - cache=strict
 - actimeo=30
 - nobrl  # disable sending byte range lock requests to the server and for applications which have challenges with posix locks
parameters:
  skuName: Premium_LRS
    {{- end }} 
volumeBindingMode: Immediate
reclaimPolicy: Retain
  {{- end }}
---
  {{- if .Values.AnalysisNodeFS.enable }}
    {{- if eq .Values.K8SProvider "EKS" }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-shared-datadir
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep  
  labels:
    console.service: console-analysis-node
spec:
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ .Values.FileClassName }}
  csi:
    driver: {{ .Values.EKS_FSdriver }}
    volumeHandle: {{ .Values.AnalysisNodeFS.EFSsystemID }}::{{ .Values.AnalysisNodeFS.EFSaccessPointID }}
  claimRef:
    namespace: {{ .Release.Namespace }}
    name: pvc-shared-datadir
    {{- end }}
  {{- end }}
{{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-shared-datadir
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep  
  labels:
    console.service: console-analysis-node
spec:
  accessModes:
{{- if .Values.AnalysisNodeFS.enable }}
    - ReadWriteMany
  storageClassName: {{ .Values.FileClassName }}
{{- else }}
    - ReadWriteOnce
  storageClassName: {{ .Values.DiskClassName }}
{{- end }}  
  resources:
    requests:
      storage: 100Gi
---
# For storage postgres data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-data
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 128Gi  # Default for Postgres, change according to deployment and applications in portfolio
  storageClassName: {{ .Values.DiskClassName }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-imagingviewer-v3-server-log
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep  
  labels:
    console.service: viewer-server
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.DiskClassName }}
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-imagingviewer-v3-etl-logs
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
    console.service: viewer-etl
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.DiskClassName }}
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-imagingviewer-v3-aimanager-logs
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
    console.service: viewer-aimanager
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.DiskClassName }}
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-extendproxy-data
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep 
  labels:
    console.service: extendproxy 
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi  # Specify the storage size required
  storageClassName: {{ .Values.DiskClassName }}
