apiVersion: v1
kind: Service
metadata:
  labels:
    console.service: console-postgres
  name: console-postgres
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: "2285"
      port: 2285
      targetPort: 5432
  selector:
    console.service: console-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    console.service: console-postgres
  name: console-postgres
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.ConsolePostgresReplicaCount }}
  selector:
    matchLabels:
      console.service: console-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        console.network/aip-network: "true"
        console.service: console-postgres
    spec:
      securityContext:
        runAsUser: 26
        runAsGroup: 26
        fsGroup: 26
        fsGroupChangePolicy: "Always"  
      containers:
        - env:
            - name: POSTGRES_INITDB_ARGS
              value: -E 'UTF-8' --lc-collate=C --lc-ctype=C
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: "{{ .Values.ConsolePostgresImage.name }}:{{ .Values.ConsolePostgresImage.tag}}"
          imagePullPolicy: "{{ .Values.ConsolePostgresImage.pullPolicy }}"
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: console-postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          resources:
            {{- toYaml .Values.ConsolePostgresResources | nindent 12 }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
              subPath: postgres
            - name: pgconf
              mountPath: "/var/lib/postgresql/data/pgdata/postgresql.conf"              
              subPath: postgresql.conf
            - name: pginit
              mountPath: "/docker-entrypoint-initdb.d/init-db.sh"               
              subPath: init-db.sh
          
      restartPolicy: Always
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data 
        - name: pgconf
          configMap:
            name: console-v3-postgresqlconf
            defaultMode: 0777     
        - name: pginit
          configMap:
            name: console-v3-init-db
            defaultMode: 0777   
