apiVersion: v1
kind: Service
metadata:
  name: viewer-neo4j
  labels:
    app: viewer-neo4j
    component: core
    
spec:
  ports:
    - port: 7474
      targetPort: 7474
      nodePort: 30074
      name: browser
    - port: 7687
      targetPort: 7687
      name: bolt
      nodePort: 30087
    - port: 6362
      targetPort: 6362
      name: backup
  type: NodePort
  selector:
    app: viewer-neo4j
    component: core
---
apiVersion: "apps/v1"
kind: StatefulSet
metadata:
  name: viewer-neo4j-core
  namespace: {{.Release.Namespace}}
spec:
  serviceName: viewer-neo4j
  replicas: {{.Values.ViewerNeo4jReplicaCount}}
  selector:
    matchLabels:
      app: viewer-neo4j
  template:
    metadata:
      labels:
        app: viewer-neo4j
        component: core
    spec:
      containers:
        - name: viewer-neo4j
          image: "{{.Values.ViewerNeo4jImage.name}}:{{.Values.ViewerNeo4jImage.tag}}"
          imagePullPolicy: "{{.Values.ViewerNeo4jImage.pullPolicy}}"
          command: ['sh', '-c', "/var/lib/neo4j/config/init.sh"]
          env:
            - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
              value: "yes"
            - name: NEO4J_dbms_memory_heap_maxSize
              value: "8G"
            - name: TIME_ZONE
              value: "Europe/Paris"
          ports:
            - containerPort: 7474
              name: browser
            - containerPort: 7687
              name: bolt
            - containerPort: 6362
              name: backup
          securityContext:
            privileged: true
          resources:
            {{- toYaml .Values.ViewerNeo4jResources | nindent 12 }}
          volumeMounts:
            - name: logdir
              mountPath: /logs
            - name: confdir
              mountPath: /var/lib/neo4j/config
            - name: neo4jconf
              mountPath: /var/lib/neo4j/config/configuration/neo4j.conf
              subPath: neo4j.conf
      imagePullSecrets:
        - name: castbuild-sec 
      volumes:
        - name: neo4jconf
          configMap:
            name: neo4jconf

  volumeClaimTemplates:
    - metadata:
        name: logdir
      spec:
        accessModes:
          - ReadWriteMany
        storageClassName: "{{ .Values.storageClassName.name }}"
        resources:
          requests:
            storage: "1Gi"
    - metadata:
        name: confdir
      spec:
        accessModes:
          - ReadWriteMany
        storageClassName: "{{ .Values.storageClassName.name }}"
        resources:
          requests:
            storage: "10Gi"
